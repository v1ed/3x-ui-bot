"""tg id int to string

Revision ID: 068ea1688c8d
Revises: 9af3d87b982f
Create Date: 2025-06-18 20:15:28.486992

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '068ea1688c8d'
down_revision: Union[str, Sequence[str], None] = '9af3d87b982f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('user_configs_telegram_id_fkey', 'user_configs', type_='foreignkey')
    op.drop_constraint('user_keys_telegram_id_fkey', 'user_keys', type_='foreignkey')

    # Приводим к типу String
    op.alter_column('user_configs', 'telegram_id',
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        postgresql_using='telegram_id::text'
    )

    op.alter_column('user_keys', 'telegram_id',
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        postgresql_using='telegram_id::text'
    )

    op.alter_column('users', 'telegram_id',
        existing_type=sa.INTEGER(),
        type_=sa.String(),
        postgresql_using='telegram_id::text'
    )

    # Создаем внешние ключи заново
    op.create_foreign_key(
        'user_configs_telegram_id_fkey',
        'user_configs', 'users',
        ['telegram_id'], ['telegram_id']
    )
    op.create_foreign_key(
        'user_keys_telegram_id_fkey',
        'user_keys', 'users',
        ['telegram_id'], ['telegram_id']
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('user_configs_telegram_id_fkey', 'user_configs', type_='foreignkey')
    op.drop_constraint('user_keys_telegram_id_fkey', 'user_keys', type_='foreignkey')

    # Приводим обратно к INTEGER
    op.alter_column('user_configs', 'telegram_id',
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        postgresql_using='telegram_id::integer'
    )

    op.alter_column('user_keys', 'telegram_id',
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        postgresql_using='telegram_id::integer'
    )

    op.alter_column('users', 'telegram_id',
        existing_type=sa.String(),
        type_=sa.INTEGER(),
        postgresql_using='telegram_id::integer'
    )

    # Восстанавливаем внешние ключи
    op.create_foreign_key(
        'user_configs_telegram_id_fkey',
        'user_configs', 'users',
        ['telegram_id'], ['telegram_id']
    )
    op.create_foreign_key(
        'user_keys_telegram_id_fkey',
        'user_keys', 'users',
        ['telegram_id'], ['telegram_id']
    )
    # ### end Alembic commands ###
